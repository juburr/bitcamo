version: 2.1

aliases:
  - &run-always
    branches:
      only: /.*/
    tags:
      only: /.*/

  - &run-never
    branches:
      ignore: /.*/
    tags:
      ignore: /.*/

  - &run-on-release
    branches:
      ignore: /.*/
    tags:
      only: /^v[0-9]+\.[0-9]+\.[0-9]+$/

parameters:
  cimg_base_version:
    type: string
    default: "stable"
  docker_version:
    type: string
    default: "docker24"
  python_version:
    type: string
    default: "3.8"

jobs:
  unit_tests:
    docker:
      - image: cimg/python:<< pipeline.parameters.python_version >>
    steps:
      - checkout
      - run:
          name: Log Python Version
          command: python3 --version
      - restore_cache:
          name: Restore Python Cache
          key: bitcamo-<<pipeline.parameters.python_version >>-{{ checksum "requirements.txt" }}
      - run:
          name: Install Python Dependencies
          command: |
            if [ ! -d .venv ]; then
              python3 -m venv .venv
              source .venv/bin/activate
              pip3 install --upgrade pip
              pip3 install -r requirements.txt
            fi
            # All steps in this job should use the venv
            echo "source .venv/bin/activate" >> $BASH_ENV
      - save_cache:
          name: Save Python Cache
          key: bitcamo-<<pipeline.parameters.python_version >>-{{ checksum "requirements.txt" }}
          paths:
            - .venv
      - run:
         name: Run Unit Tests
         command: |
           python3 -m unittest utils.tests.test_embedding
           python3 -m unittest utils.tests.test_os

  container_build:
    docker:
      - image: cimg/base:<< pipeline.parameters.cimg_base_version >>
    steps:
      - checkout
      - run:
          name: Set Docker Tag Name
          command: |
            # Drops leading 'v' from tag name.
            # e.g., git tag v1.0.0 becomes docker tag 1.0.0.
            export DOCKER_TAG=<< pipeline.git.tag >>
            export DOCKER_TAG="${DOCKER_TAG//v}"
            echo "Docker tag will be: ${DOCKER_TAG}"

            if [[ "${DOCKER_TAG}" == "" ]]; then
              export DOCKER_TAG="dev"
            fi

            # Persists environment variable to future steps
            echo "export DOCKER_TAG=\"${DOCKER_TAG}\"" >> $BASH_ENV
            echo "export DOCKER_TAG=\"${DOCKER_TAG}\"" > ~/tags.env
      - setup_remote_docker:
          version: << pipeline.parameters.docker_version >>
          docker_layer_caching: true
      - run:
          name: Set Base Image Digest
          command: |
            # Get the final base image listed in the Dockerfile, in case of multi-stage builds
            export BASE_IMAGE=$(grep 'FROM ' Dockerfile | tail -n 1 | cut -d ' ' -f 2)

            # Pull the image and determine the SHA256 hash
            docker pull $BASE_IMAGE
            export BASE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $BASE_IMAGE | cut -d '@' -f 2)

            # Persists environment variable to future steps
            echo "export BASE_DIGEST=\"${BASE_DIGEST}\"" >> $BASH_ENV
      - run:
          name: Build Docker Image
          environment:
            BUILDKIT_PROGRESS: plain
            DOCKER_BUILLDKIT: 1
          command: |
            echo "Building docker image bitcamo:${DOCKER_TAG}..."

            # Static OCI annotations are defined inside the Dockerfile
            docker build \
              --label "org.opencontainers.image.version=<< pipeline.git.tag >>" \
              --label "org.opencontainers.image.revision=<< pipeline.git.revision >>" \
              --label "org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" \
              --label "org.opencontainers.image.base.digest=${BASE_DIGEST}" \
              -t bitcamo:${DOCKER_TAG} .
      - run:
          name: Log Image Inspection
          command: docker inspect bitcamo:${DOCKER_TAG}
      - run:
          name: Save Container Image
          command: |
            mkdir ~/images
            docker save -o ~/images/bitcamo.tar bitcamo:${DOCKER_TAG}
      - persist_to_workspace:
          root: /home/circleci
          paths:
            - images
            - tags.env

  container_publish:
    docker:
      - image: cimg/base:<< pipeline.parameters.cimg_base_version >>
    steps:
      - attach_workspace:
          at: ~/workspace
      - setup_remote_docker:
          version: << pipeline.parameters.docker_version >>
          docker_layer_caching: true
      - run:
          name: Load saved image
          command: docker load -i ~/workspace/images/bitcamo.tar
      - run:
          name: Authenticate with Github
          command: |
            echo $GITHUB_TOKEN | docker login ghcr.io -u $GITHUB_USER --password-stdin
      - run:
          name: Tag and Push Docker Image
          command: |
            $(cat ~/workspace/tags.env | xargs)
            docker tag bitcamo:${DOCKER_TAG} ghcr.io/juburr/bitcamo:${DOCKER_TAG}
            docker tag bitcamo:${DOCKER_TAG} ghcr.io/juburr/bitcamo:latest
            docker push ghcr.io/juburr/bitcamo:${DOCKER_TAG}
            docker push ghcr.io/juburr/bitcamo:latest

workflows:
  version: 2
  newcommits:
     jobs:
       - unit_tests:
           filters:
             tags:
               only: /.*/
             branches:
               only: /.*/
       - container_build:
           requires:
             - unit_tests
           filters: *run-always
       - container_publish:
           context: github_bitcamo_rw
           requires:
             - container_build
           filters: *run-on-release
